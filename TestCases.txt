Testing Cases for Paxos:


Test Case 1:
Env :
Replicas: 2
Leaders: 1
Acceptors:  3

Flow :
Replica 1: Proposes request <client : 1, request :1, slot : 1>
Replica 2: Proposes request <client : 2, request :1, slot : 1>
Decision : <client : 2, request :1, slot : 1>

Replica 1: proposes again <client : 1, request :1, slot : 2>

Test Case 2:
Env :
Replicas: 2
Leaders: 1
Acceptors:  3

Flow :
Replica 1: Proposes request <client : 2, request :2, slot : 4>
Decision : <client : 2, request :2, slot : 4>

Replica 2: Gets the client request when at Slot 2. Do not propose the request as the decision is already there.

Test Case 3:
Env :
Replicas: 2
Leaders: 1
Acceptors:  3

Flow :
Replica 1: Proposes request <client : 2, request :2, slot : 4>
Replica 2: Proposes request <client : 2, request :2, slot : 2> (because it didnt receive any decision for this request yet thus decision for slot 4 is not yet in for the Replica 2)

Decision : <client : 2, request :2, slot : 4>
Decision : <client : 2, request :2, slot : 2>

Replica 1 and 2 : Dont process again the same request <client : 2, request :2, slot : 2>

Test Case 4:
Env :
Replicas: 2
Leaders: 2
Acceptors:  3

Flow :
Leader 1: Gets adopted by the acceptors
Leader 2: Gets adopted by the acceptors
Leader 1: Gets pre-empted by when sends commander
Leader 2: is able to send the decision


Testing Failure detection :

Test 1:

Env :
Replicas: 2
Leaders: 3
Acceptors:  3
Client requests :

Flow :

All the three leaders send the Phase one msg to all the three acceptors. Leader 2 and Leader 3 get  pre-empted with the ballot no of Leader 1.
Leader 3 is the Master Leader
Leader 1 is monitoring Leader 3
Leader 2 is monitoring Leader 3

Leader 2 dies: No change in the Leader 1 and 3

We don't need to show any cmd getting executed even the presence of Scouts should be enough to show who is the current leader.

Leader 3 dies: Leader 1 is the new Leader (sends a new Scout)

NOTE: Either test 2 will work or test 3(doubt we can recreate both 2 and 3)
Test 2:
Env :
Replicas: 2
Leaders: 3
Acceptors:  3

Flow :
All the three leaders send the Phase one msg to all the three acceptors. Leader 2 gets pre-empted with the ballot no of Leader 1. Leader 3 get  pre-empted with the ballot no of Leader 2.
Leader 1 is the Master Leader
Leader 2 is monitoring Leader 1
Leader 3 is monitoring Leader 2

Leader 2 dies:
Leader 3 sends a scout again and gets pre-empted because the ballot of 0 is of more wieght

We don't need to show any cmd getting executed even the presence of Scouts should be enough to show who is the current leader.

Test 3:
Env :
Replicas: 2
Leaders: 3
Acceptors:  3

Flow :
All the three leaders send the Phase one msg to all the three acceptors. Leader 2 gets pre-empted with the ballot no of Leader 1. Leader 3 get  pre-empted with the ballot no of Leader 2.
Leader 1 is the Master Leader
Leader 2 is monitoring Leader 1
Leader 3 is monitoring Leader 2

Leader 2 dies:
Leader 3 sends a scout again and gets gets chosen as the leader and now Leader 1 is pre-empted

We don't need to show any cmd getting executed even the presence of Scouts should be enough to show who is the current leader.

Test 4:
Env :
Replicas: 2
Leaders: 2
Acceptors:  3

Flow :

Leader 1 is the Master Leader
Leader 2 is monitoring Leader 1

Leader 1 slows down.
Leader 2 time-out and acts as the leader.
Replicas send a request to both the leaders.
Leader 1 gets pre-empted. and starts listening to Leader 2.
Leader 2 gets the values decided and sends decision to all

Test 5:
Env :
Replicas: 2
Leaders: 2
Acceptors:  3

Flow :

Leader 1 is the Master Leader
Leader 2 is monitoring Leader 1

Leader 1 slows down.
Leader 2 time-out and acts as the leader.
Replicas send a request to both the leaders.
Leader 1 gets pre-empted. and starts listening to Leader 2.
Leader 2 gets the values decided and sends decision to all

